@page "/users/create"
@using Models
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Créer un utilisateur</PageTitle>

<h3>Créer un nouvel utilisateur</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="user" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="lastname" class="form-label">Nom</label>
        <input type="text" class="form-control" id="lastname" @bind="user.Lastname" />
    </div>

    <div class="mb-3">
        <label for="firstname" class="form-label">Prénom</label>
        <input type="text" class="form-control" id="firstname" @bind="user.Firstname" />
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" @bind="user.Email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Mot de passe</label>
        <input type="password" class="form-control" id="password" @bind="passwordValue" />
    </div>

    <div class="mb-3">
        <label for="passwordConfirmation" class="form-label">Confirmation de mot de passe</label>
        <input type="password" class="form-control" id="passwordConfirmation" @bind="passwordValueConfirmation" />
    </div>

    <button type="submit" class="btn btn-primary">Créer</button>
    <a href="/users" class="btn btn-secondary ms-2">Annuler</a>
    
</EditForm>

@code {
    private User user = new User();
    private string passwordValue;
    private string passwordValueConfirmation;
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        errorMessage = string.Empty;

        if (passwordValue != passwordValueConfirmation)
        {
            errorMessage = "Les mots de passe ne correspondent pas.";
            return;
        }

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/users", new
            {
                lastname = user.Lastname,
                firstname = user.Firstname,
                email = user.Email,
                isAdmin = user.IsAdmin,
                password = passwordValue
            });

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/users");
            }
            else
            {
                errorMessage = "Échec de la création de l'utilisateur : " + response.ReasonPhrase;
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Erreur lors de la soumission : " + ex.Message;
        }
    }
}
